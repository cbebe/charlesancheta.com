(()=>{"use strict";var e={803:()=>{try{self["workbox:core:6.5.2"]&&_()}catch(e){}},838:()=>{try{self["workbox:precaching:6.5.2"]&&_()}catch(e){}},481:()=>{try{self["workbox:routing:6.5.2"]&&_()}catch(e){}},228:()=>{try{self["workbox:strategies:6.5.2"]&&_()}catch(e){}}},t={};function s(a){var n=t[a];if(void 0!==n)return n.exports;var i=t[a]={exports:{}};return e[a](i,i.exports,s),i.exports}(()=>{s(803);const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}const a={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},n=e=>[a.prefix,e,a.suffix].filter((e=>e&&e.length>0)).join("-"),i=e=>e||n(a.precache),r=e=>e||n(a.runtime);function c(e,t){const s=t();return e.waitUntil(s),s}s(838);function o(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:a}=e;if(!a)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(a,location.href);return{cacheKey:e.href,url:e.href}}const n=new URL(a,location.href),i=new URL(a,location.href);return n.searchParams.set("__WB_REVISION__",s),{cacheKey:n.href,url:i.href}}class h{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class l{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}}let u;async function f(e,s){let a=null;if(e.url){a=new URL(e.url).origin}if(a!==self.location.origin)throw new t("cross-origin-copy-response",{origin:a});const n=e.clone(),i={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},r=s?s(i):i,c=function(){if(void 0===u){const e=new Response("");if("body"in e)try{new Response(e.body),u=!0}catch(e){u=!1}u=!1}return u}()?n.body:await n.blob();return new Response(c,r)}function d(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}class p{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const g=new Set;s(228);function y(e){return"string"==typeof e?new Request(e):e}class w{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new p,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:s}=this;let a=y(e);if("navigate"===a.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const n=this.hasCallback("fetchDidFail")?a.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))a=await e({request:a.clone(),event:s})}catch(e){if(e instanceof Error)throw new t("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const i=a.clone();try{let e;e=await fetch(a,"navigate"===a.mode?void 0:this._strategy.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:i,response:e});return e}catch(e){throw n&&await this.runCallbacks("fetchDidFail",{error:e,event:s,originalRequest:n.clone(),request:i.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=y(e);let s;const{cacheName:a,matchOptions:n}=this._strategy,i=await this.getCacheKey(t,"read"),r=Object.assign(Object.assign({},n),{cacheName:a});s=await caches.match(i,r);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:a,matchOptions:n,cachedResponse:s,request:i,event:this.event})||void 0;return s}async cachePut(e,s){const a=y(e);var n;await(n=0,new Promise((e=>setTimeout(e,n))));const i=await this.getCacheKey(a,"write");if(!s)throw new t("cache-put-with-no-response",{url:(r=i.url,new URL(String(r),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var r;const c=await this._ensureResponseSafeToCache(s);if(!c)return!1;const{cacheName:o,matchOptions:h}=this._strategy,l=await self.caches.open(o),u=this.hasCallback("cacheDidUpdate"),f=u?await async function(e,t,s,a){const n=d(t.url,s);if(t.url===n)return e.match(t,a);const i=Object.assign(Object.assign({},a),{ignoreSearch:!0}),r=await e.keys(t,i);for(const t of r)if(n===d(t.url,s))return e.match(t,a)}(l,i.clone(),["__WB_REVISION__"],h):null;try{await l.put(i,u?c.clone():c)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of g)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:o,oldResponse:f,newResponse:c.clone(),request:i,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let a=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))a=y(await e({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[s]=a}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),a=a=>{const n=Object.assign(Object.assign({},a),{state:s});return t[e](n)};yield a}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class _ extends class{constructor(e={}){this.cacheName=r(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,a="params"in e?e.params:void 0,n=new w(this,{event:t,request:s,params:a}),i=this._getResponse(n,s,t);return[i,this._awaitComplete(i,n,s,t)]}async _getResponse(e,s,a){let n;await e.runCallbacks("handlerWillStart",{event:a,request:s});try{if(n=await this._handle(s,e),!n||"error"===n.type)throw new t("no-response",{url:s.url})}catch(t){if(t instanceof Error)for(const i of e.iterateCallbacks("handlerDidError"))if(n=await i({error:t,event:a,request:s}),n)break;if(!n)throw t}for(const t of e.iterateCallbacks("handlerWillRespond"))n=await t({event:a,request:s,response:n});return n}async _awaitComplete(e,t,s,a){let n,i;try{n=await e}catch(i){}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:n}),await t.doneWaiting()}catch(e){e instanceof Error&&(i=e)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:n,error:i}),t.destroy(),i)throw i}}{constructor(e={}){e.cacheName=i(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(_.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,s){let a;const n=s.params||{};if(!this._fallbackToNetwork)throw new t("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{0;const t=n.integrity,i=e.integrity,r=!i||i===t;if(a=await s.fetch(new Request(e,{integrity:i||t})),t&&r){this._useDefaultCacheabilityPluginIfNeeded();await s.cachePut(e,a.clone());0}}return a}async _handleInstall(e,s){this._useDefaultCacheabilityPluginIfNeeded();const a=await s.fetch(e);if(!await s.cachePut(e,a.clone()))throw new t("bad-precaching-response",{url:e.url,status:a.status});return a}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,a]of this.plugins.entries())a!==_.copyRedirectedCacheableResponsesPlugin&&(a===_.defaultPrecacheCacheabilityPlugin&&(e=s),a.cacheWillUpdate&&t++);0===t?this.plugins.push(_.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}_.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},_.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await f(e):e};class v{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new _({cacheName:i(e),plugins:[...t,new l({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const s=[];for(const a of e){"string"==typeof a?s.push(a):a&&void 0===a.revision&&s.push(a.url);const{cacheKey:e,url:n}=o(a),i="string"!=typeof a&&a.revision?"reload":"default";if(this._urlsToCacheKeys.has(n)&&this._urlsToCacheKeys.get(n)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(n),secondEntry:e});if("string"!=typeof a&&a.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==a.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:n});this._cacheKeysToIntegrities.set(e,a.integrity)}if(this._urlsToCacheKeys.set(n,e),this._urlsToCacheModes.set(n,i),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return c(e,(async()=>{const t=new h;this.strategy.plugins.push(t);for(const[t,s]of this._urlsToCacheKeys){const a=this._cacheKeysToIntegrities.get(s),n=this._urlsToCacheModes.get(t),i=new Request(t,{integrity:a,cache:n,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:i,event:e}))}const{updatedURLs:s,notUpdatedURLs:a}=t;return{updatedURLs:s,notUpdatedURLs:a}}))}activate(e){return c(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),a=[];for(const n of t)s.has(n.url)||(await e.delete(n),a.push(n.url));return{deletedURLs:a}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(e){const s=this.getCacheKeyForURL(e);if(!s)throw new t("non-precached-url",{url:e});return t=>(t.request=new Request(e),t.params=Object.assign({cacheKey:s},t.params),this.strategy.handle(t))}}s(481);(async()=>{const e=function(){const e=JSON.parse(new URLSearchParams(self.location.search).get("params"));return e.debug&&console.log("[Docusaurus-PWA][SW]: Service Worker params:",e),e}(),t=[{"revision":"9b518dcd8d6c5672390ea1c6ebf49449","url":"404.html"},{"revision":"fb8778cff94a03765bd28865dca67e21","url":"assets/css/styles.e8ef2257.css"},{"revision":"d514fed685a13ee002784eab9d82f133","url":"assets/js/01a85c17.adca09f6.js"},{"revision":"46587783a39961cf5794e6d2615aa3b0","url":"assets/js/073e0fda.25d07c13.js"},{"revision":"5dcf4b606c424dac5b477d4628a02f13","url":"assets/js/088b3228.cb4dc4cf.js"},{"revision":"29ba6b049d767856cb57c55ce5623c2d","url":"assets/js/0fe801a8.d047d7db.js"},{"revision":"5139d06232e63af3d8e93200f66550f4","url":"assets/js/12a11c15.92f5aef2.js"},{"revision":"67c2b62b94fe564cf7219415d912b41c","url":"assets/js/15d070c3.21d511b4.js"},{"revision":"8913023894d5debb58d881077c96c886","url":"assets/js/1955d038.8965d01e.js"},{"revision":"ae4f5d7a55b2e532cb5c88e64a9445e4","url":"assets/js/1df93b7f.467ae7d3.js"},{"revision":"354bea9dcf203b6c412d746727c7cf4a","url":"assets/js/1dfc94a1.855dd28a.js"},{"revision":"2af16250bcc03b9072218d5a01bef616","url":"assets/js/2135.524c194b.js"},{"revision":"9d9ead5caf2754bdf5fb3dd66586b6b2","url":"assets/js/224db2be.f124a55f.js"},{"revision":"b5ec7e50aff44de8042db0bbf11376b5","url":"assets/js/2504.47fb177e.js"},{"revision":"51db4a6ecd8044173b82695ca7e7ee8d","url":"assets/js/2ce7cb45.7a7080d1.js"},{"revision":"722c24b06a7640345481d616c5bd9d41","url":"assets/js/2df2f8dc.1d554824.js"},{"revision":"c1d07d2cb2241601ef63dcdff1d96743","url":"assets/js/3c816a67.824f245c.js"},{"revision":"6f67abbb582c2f915639a404626295e8","url":"assets/js/451dbd0f.c239311d.js"},{"revision":"7bbe8efa52e603d9e0373d7107b9439d","url":"assets/js/4792d0f9.2ca80bad.js"},{"revision":"a6115669d420333bb671fbf0a7ff804c","url":"assets/js/4c22b11d.fd90d4bd.js"},{"revision":"1af81a1726f53990ae3f313d017a448d","url":"assets/js/4ed4773d.04ca8f3e.js"},{"revision":"b5fb0a00533c56795de3ad7b775a7c65","url":"assets/js/51da1ca8.23f691e6.js"},{"revision":"48c0aea6da3965edd20c02aa8975ad47","url":"assets/js/5329.129cf4ad.js"},{"revision":"407360ce095c41c68137a65ef2eebe96","url":"assets/js/55eb21a6.c979a8c4.js"},{"revision":"203222c9b0d20eaf269e8d244b360be9","url":"assets/js/607b2344.dc1e893d.js"},{"revision":"9ec7af1e0e05077bd70c1b8263c71c57","url":"assets/js/627e96c6.afefe2dd.js"},{"revision":"e95d6067dc4f13cd7214a89ec0486f38","url":"assets/js/658.72eb0efd.js"},{"revision":"18a75b5307751fe191ea6af7c93bb2d9","url":"assets/js/681a7efa.7d87d059.js"},{"revision":"486fb2e09eae82d195109990e06a52e2","url":"assets/js/6875c492.2896b983.js"},{"revision":"4951c4723f3eb8655dab8df95014ca42","url":"assets/js/6b9f5967.8bf7eb1c.js"},{"revision":"67860ae537ecef25898684c71561f950","url":"assets/js/7a37a2ff.0ae74d06.js"},{"revision":"2fd4486bd1732c4dab736495b1732894","url":"assets/js/7b6396d9.2317aaf5.js"},{"revision":"089f75ee34310fbd85cd5ead1950f9cd","url":"assets/js/814f3328.57956408.js"},{"revision":"56b471996d16f7bf074c7361ab765cb9","url":"assets/js/8758b7c0.3554b6f5.js"},{"revision":"bd8b43ba696a1c52e8431c1f2bfdabd6","url":"assets/js/8be49599.eb949547.js"},{"revision":"e62296d5acde4ccd564f67d7a9887518","url":"assets/js/9102.6a337435.js"},{"revision":"61151cb72dcf7362951a45c88662ffb9","url":"assets/js/92a46314.63044996.js"},{"revision":"40ddb819d851aada14375691656a512f","url":"assets/js/931707c5.6a24d61d.js"},{"revision":"fb5874cf8bde566bad851aec1e1448d2","url":"assets/js/9a119d2a.6fb325e1.js"},{"revision":"8be90d284d0c6b7a794d7c218aae3b2d","url":"assets/js/9d2c182a.cb84b4a8.js"},{"revision":"66964b50d66fb1256aaf6cadf6c7f462","url":"assets/js/9e4087bc.f19ff8b1.js"},{"revision":"24a0014c9b711e43e439250309a96397","url":"assets/js/9f3660ec.209713d1.js"},{"revision":"ae555fa514d0f89b6169a7ec2526ea9e","url":"assets/js/9f46bfbf.139661a8.js"},{"revision":"2f7918444917af7eb8dcc6c8bf72e178","url":"assets/js/a2280744.5a05fd1c.js"},{"revision":"9a4b25c6310c3c0ad2bd846ee6a694ad","url":"assets/js/a24beb83.3b721c2c.js"},{"revision":"a02c425d9a003a6247d5171a76012ae3","url":"assets/js/a6aa9e1f.43de91f0.js"},{"revision":"079f845673dc96177c605091156366f2","url":"assets/js/a7023ddc.d2df6144.js"},{"revision":"1629553c0998e71d22dea2f9a0ab127b","url":"assets/js/a8f03678.b9eae4ea.js"},{"revision":"6940009eff4de5ede7d9fa589da63a54","url":"assets/js/ac918956.b02d5f27.js"},{"revision":"b21d73e9e8e24b4c0612a2059286cc82","url":"assets/js/b1b844e7.a9c5d758.js"},{"revision":"c9d563c8a8fddddc5fec4d9b394163f9","url":"assets/js/b2b675dd.3189697a.js"},{"revision":"04cf23ecaeb7002277015a304b6ce8f6","url":"assets/js/b2f554cd.b1f21edc.js"},{"revision":"ec202fd9ee569ee99cead2b86ace0531","url":"assets/js/b745e581.5e66b043.js"},{"revision":"914b7c0da2391b1044740784f8c01c15","url":"assets/js/b9173af5.aaaba58f.js"},{"revision":"da148465e5c7b7385717bb227510d291","url":"assets/js/bb899d9f.c864eea5.js"},{"revision":"cf28e5f60cbaf8c82e9f7c06aa545e7a","url":"assets/js/bcbbf42e.13030661.js"},{"revision":"30ce13c5f40023b11a9e05473f0712b0","url":"assets/js/bd4c38bc.371d8aa8.js"},{"revision":"4e2022c973d357c4b12ce8b1fec6bc34","url":"assets/js/c2b2df4f.06d75e75.js"},{"revision":"faa6b0e81d8bbfc4755edc7de29096bb","url":"assets/js/ccc49370.7c64fa7c.js"},{"revision":"32ae82dae6045e730070ffc7ee74294a","url":"assets/js/cce51cf2.de37a74a.js"},{"revision":"2681117f22d3c89bf802d980e769bc5b","url":"assets/js/cf42b3b0.c8f53673.js"},{"revision":"8a83ee8dff217cce035a742081ad5fbc","url":"assets/js/df89e4a8.0d481ba7.js"},{"revision":"8bb37adaadb853f8ddedb63c4eaf2b7a","url":"assets/js/df98ca8b.d61486a3.js"},{"revision":"167d9502bdcb9d1588b0ab94acb910f8","url":"assets/js/e450744e.47607885.js"},{"revision":"a08f9b67f70fae4a71ed6a41d576528f","url":"assets/js/f6ba3702.091d4b77.js"},{"revision":"416c1c59a6ddf624d35fd6c40280c4bf","url":"assets/js/fc3deafd.bf684c30.js"},{"revision":"b0ef213fa39e38a7a054496eaa7f721d","url":"assets/js/ff608589.6fc9b314.js"},{"revision":"222a83d7ec797a86236e5da41e41f592","url":"assets/js/main.4850b3f2.js"},{"revision":"a537e44a4bbee2321d7e96aacea39364","url":"assets/js/runtime~main.28810096.js"},{"revision":"9e3d6ca22d29e6d6b8eebd810733fd73","url":"blog/2022/06/07/friendship-ended/index.html"},{"revision":"c4af2f21e5d19e8b3e9dd3a214f9435d","url":"blog/archive/index.html"},{"revision":"9e060c305d96be260e45c408733359f2","url":"blog/bye-bye-netlify/index.html"},{"revision":"a4a5c1dc6a80309ca0066d267f51e01d","url":"blog/dev-log/boboman/day1/index.html"},{"revision":"49fab360a64f49439d2430df043e7a19","url":"blog/dev-log/boboman/day2/index.html"},{"revision":"4905e0a07484805abea9e4644cb2b1f0","url":"blog/dev-log/boboman/day3/index.html"},{"revision":"25ddefc6eff1533634b1c487c4321ec5","url":"blog/dev-log/boboman/day4/index.html"},{"revision":"03a4cdaf3498f9440d0e986367c35f64","url":"blog/index.html"},{"revision":"c8d4768d8a48878c97b9f1caa0831995","url":"blog/tags/backend/index.html"},{"revision":"aa039018432f63add5850523d74c58a4","url":"blog/tags/dev-log/index.html"},{"revision":"e866633ce1964ad549ad949842e8c33d","url":"blog/tags/dev/index.html"},{"revision":"a7fe1547f56286714a91aa4b6d86d653","url":"blog/tags/first/index.html"},{"revision":"69838cd965c4c0688f8bd0914e33dc4e","url":"blog/tags/gh-pages/index.html"},{"revision":"f7d7219ed472891fbd8afa21977590fc","url":"blog/tags/go/index.html"},{"revision":"f8e89cceb213d2eef594b6a352ea8407","url":"blog/tags/hosting/index.html"},{"revision":"ecad639b4ec64dfacaaf6f2278c2a2e5","url":"blog/tags/index.html"},{"revision":"c15e8a034a2948afcceb49b5d28c7445","url":"blog/tags/love/index.html"},{"revision":"eb9fd41bbba6a9709318875405592e7f","url":"blog/tags/lua/index.html"},{"revision":"a5008cc74655ed971076a866e9854945","url":"blog/tags/meme/index.html"},{"revision":"3f2f92911e33536b21268bb46605a597","url":"blog/tags/multiplayer/index.html"},{"revision":"b5948342ae379f2ef7b700336ced1a2a","url":"blog/tags/netlify/index.html"},{"revision":"5be552c83beb3ce7e96eb24b0e08092b","url":"blog/tags/til/index.html"},{"revision":"16e53a6821d41c40d6ec9f3375b09747","url":"blog/tags/typescript/index.html"},{"revision":"3e9111613193217c60f5b6d8c520853c","url":"blog/tags/welcome/index.html"},{"revision":"bfcef0549f57b15c9a81020a18cb253f","url":"blog/til/my-actual-height/index.html"},{"revision":"3695643cd2e86c35f05d388d9e1ee5c9","url":"blog/welcome/index.html"},{"revision":"f5bb802b294eb07a3af57a3264dacbc0","url":"index.html"},{"revision":"d5443a06fab2877663bfef43d8f553bb","url":"manifest.json"},{"revision":"0323b096cf1a19e7bdf43442f911f396","url":"projects/index.html"},{"revision":"54743a46ab20c5a6adb212565033bff2","url":"work/index.html"},{"revision":"f3c141d93c2fa0ff22109674933bf1d4","url":"android-chrome-192x192.png"},{"revision":"5297b9312c0ac6c8fdd306dc865cfb8a","url":"android-chrome-512x512.png"},{"revision":"a6a595d086a2cac9c0fb735d7cc4d08b","url":"apple-touch-icon.png"},{"revision":"7f740557aa8f363f922f8c88029c364f","url":"assets/images/boboman-81f5324a09b21c5973c71e5ad3c65132.gif"},{"revision":"108dd55001116a31b54284171071131b","url":"favicon-16x16.png"},{"revision":"0f934f6eed47b8c1dceacd4838b70061","url":"favicon-32x32.png"},{"revision":"fbff65a23b8a920105ed91f976f47d44","url":"favicon.ico"},{"revision":"c3aa24619e1189e1598915cff7f0c16f","url":"img/devpost.svg"},{"revision":"7fa1a026116afe175cae818030d4ffc4","url":"img/docusaurus.png"},{"revision":"3347c54aa0cd5907b9dd834d0c7495ff","url":"img/email.svg"},{"revision":"63e30ac6e5c59cb3e2d1076ca68e3f5d","url":"img/gitea.svg"},{"revision":"07883e93734b98cae0f7b9c55d287250","url":"img/github.svg"},{"revision":"0ad2d4f0834413c8d66ca3ecee620351","url":"img/isaic-logo.png"},{"revision":"439e2be9600bfdccbbb0c7b2b2414f93","url":"img/isaic.svg"},{"revision":"4b17c9586313717e568e841e662d381e","url":"img/linkedin.svg"},{"revision":"b80f24b1a99646b25d9dded67d589c82","url":"img/new_tab.svg"},{"revision":"e1a2f971a6ea83cd2fbf87de6399763b","url":"img/npm-logo.svg"},{"revision":"cbdc79da1ad69751cfdebc27ea90d52e","url":"img/thyck/h2h.svg"},{"revision":"055c03e52da9e57196d2a731ff40393a","url":"img/thyck/logo.png"},{"revision":"389c76edccbe2574cc0d478d11954636","url":"img/thyck/logo.svg"},{"revision":"8ffc632675fed0ad918b736b27400c36","url":"img/thyck/wapp.svg"},{"revision":"a6b83d7b4c3cf36cb21eb7a9721716dd","url":"img/undraw_docusaurus_mountain.svg"},{"revision":"b64ae8e3c10e5ff2ec85a653cfe6edf8","url":"img/undraw_docusaurus_react.svg"},{"revision":"8fa6e79a15c385d7b2dc4bb761a2e9e3","url":"img/undraw_docusaurus_tree.svg"}],s=new v({fallbackToNetwork:!0});e.offlineMode&&(s.addToCacheList(t),e.debug&&console.log("[Docusaurus-PWA][SW]: addToCacheList",{precacheManifest:t})),await async function(e){}(),self.addEventListener("install",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: install event",{event:t}),t.waitUntil(s.install(t))})),self.addEventListener("activate",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: activate event",{event:t}),t.waitUntil(s.activate(t))})),self.addEventListener("fetch",(async t=>{if(e.offlineMode){const a=t.request.url,n=function(e){const t=new URL(e,self.location.href);return t.origin!==self.location.origin?[]:(t.search="",t.hash="",[t.href,`${t.href}${t.pathname.endsWith("/")?"":"/"}index.html`])}(a);for(const i of n){const r=s.getCacheKeyForURL(i);if(r){const s=caches.match(r);e.debug&&console.log("[Docusaurus-PWA][SW]: serving cached asset",{requestURL:a,possibleURL:i,possibleURLs:n,cacheKey:r,cachedResponse:s}),t.respondWith(s);break}}}})),self.addEventListener("message",(async t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: message event",{event:t});const s=t.data?.type;"SKIP_WAITING"===s&&self.skipWaiting()}))})()})()})();