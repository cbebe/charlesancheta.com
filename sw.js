(()=>{"use strict";var e={803:()=>{try{self["workbox:core:6.5.2"]&&_()}catch(e){}},838:()=>{try{self["workbox:precaching:6.5.2"]&&_()}catch(e){}},481:()=>{try{self["workbox:routing:6.5.2"]&&_()}catch(e){}},228:()=>{try{self["workbox:strategies:6.5.2"]&&_()}catch(e){}}},t={};function s(a){var n=t[a];if(void 0!==n)return n.exports;var i=t[a]={exports:{}};return e[a](i,i.exports,s),i.exports}(()=>{s(803);const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}const a={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},n=e=>[a.prefix,e,a.suffix].filter((e=>e&&e.length>0)).join("-"),i=e=>e||n(a.precache),r=e=>e||n(a.runtime);function c(e,t){const s=t();return e.waitUntil(s),s}s(838);function o(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:a}=e;if(!a)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(a,location.href);return{cacheKey:e.href,url:e.href}}const n=new URL(a,location.href),i=new URL(a,location.href);return n.searchParams.set("__WB_REVISION__",s),{cacheKey:n.href,url:i.href}}class h{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class l{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}}let u;async function f(e,s){let a=null;if(e.url){a=new URL(e.url).origin}if(a!==self.location.origin)throw new t("cross-origin-copy-response",{origin:a});const n=e.clone(),i={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},r=s?s(i):i,c=function(){if(void 0===u){const e=new Response("");if("body"in e)try{new Response(e.body),u=!0}catch(e){u=!1}u=!1}return u}()?n.body:await n.blob();return new Response(c,r)}function d(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}class p{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const g=new Set;s(228);function y(e){return"string"==typeof e?new Request(e):e}class w{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new p,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:s}=this;let a=y(e);if("navigate"===a.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const n=this.hasCallback("fetchDidFail")?a.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))a=await e({request:a.clone(),event:s})}catch(e){if(e instanceof Error)throw new t("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const i=a.clone();try{let e;e=await fetch(a,"navigate"===a.mode?void 0:this._strategy.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:i,response:e});return e}catch(e){throw n&&await this.runCallbacks("fetchDidFail",{error:e,event:s,originalRequest:n.clone(),request:i.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=y(e);let s;const{cacheName:a,matchOptions:n}=this._strategy,i=await this.getCacheKey(t,"read"),r=Object.assign(Object.assign({},n),{cacheName:a});s=await caches.match(i,r);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:a,matchOptions:n,cachedResponse:s,request:i,event:this.event})||void 0;return s}async cachePut(e,s){const a=y(e);var n;await(n=0,new Promise((e=>setTimeout(e,n))));const i=await this.getCacheKey(a,"write");if(!s)throw new t("cache-put-with-no-response",{url:(r=i.url,new URL(String(r),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var r;const c=await this._ensureResponseSafeToCache(s);if(!c)return!1;const{cacheName:o,matchOptions:h}=this._strategy,l=await self.caches.open(o),u=this.hasCallback("cacheDidUpdate"),f=u?await async function(e,t,s,a){const n=d(t.url,s);if(t.url===n)return e.match(t,a);const i=Object.assign(Object.assign({},a),{ignoreSearch:!0}),r=await e.keys(t,i);for(const t of r)if(n===d(t.url,s))return e.match(t,a)}(l,i.clone(),["__WB_REVISION__"],h):null;try{await l.put(i,u?c.clone():c)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of g)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:o,oldResponse:f,newResponse:c.clone(),request:i,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let a=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))a=y(await e({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[s]=a}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),a=a=>{const n=Object.assign(Object.assign({},a),{state:s});return t[e](n)};yield a}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class _ extends class{constructor(e={}){this.cacheName=r(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,a="params"in e?e.params:void 0,n=new w(this,{event:t,request:s,params:a}),i=this._getResponse(n,s,t);return[i,this._awaitComplete(i,n,s,t)]}async _getResponse(e,s,a){let n;await e.runCallbacks("handlerWillStart",{event:a,request:s});try{if(n=await this._handle(s,e),!n||"error"===n.type)throw new t("no-response",{url:s.url})}catch(t){if(t instanceof Error)for(const i of e.iterateCallbacks("handlerDidError"))if(n=await i({error:t,event:a,request:s}),n)break;if(!n)throw t}for(const t of e.iterateCallbacks("handlerWillRespond"))n=await t({event:a,request:s,response:n});return n}async _awaitComplete(e,t,s,a){let n,i;try{n=await e}catch(i){}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:n}),await t.doneWaiting()}catch(e){e instanceof Error&&(i=e)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:n,error:i}),t.destroy(),i)throw i}}{constructor(e={}){e.cacheName=i(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(_.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,s){let a;const n=s.params||{};if(!this._fallbackToNetwork)throw new t("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{0;const t=n.integrity,i=e.integrity,r=!i||i===t;if(a=await s.fetch(new Request(e,{integrity:i||t})),t&&r){this._useDefaultCacheabilityPluginIfNeeded();await s.cachePut(e,a.clone());0}}return a}async _handleInstall(e,s){this._useDefaultCacheabilityPluginIfNeeded();const a=await s.fetch(e);if(!await s.cachePut(e,a.clone()))throw new t("bad-precaching-response",{url:e.url,status:a.status});return a}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,a]of this.plugins.entries())a!==_.copyRedirectedCacheableResponsesPlugin&&(a===_.defaultPrecacheCacheabilityPlugin&&(e=s),a.cacheWillUpdate&&t++);0===t?this.plugins.push(_.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}_.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},_.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await f(e):e};class v{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new _({cacheName:i(e),plugins:[...t,new l({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const s=[];for(const a of e){"string"==typeof a?s.push(a):a&&void 0===a.revision&&s.push(a.url);const{cacheKey:e,url:n}=o(a),i="string"!=typeof a&&a.revision?"reload":"default";if(this._urlsToCacheKeys.has(n)&&this._urlsToCacheKeys.get(n)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(n),secondEntry:e});if("string"!=typeof a&&a.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==a.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:n});this._cacheKeysToIntegrities.set(e,a.integrity)}if(this._urlsToCacheKeys.set(n,e),this._urlsToCacheModes.set(n,i),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return c(e,(async()=>{const t=new h;this.strategy.plugins.push(t);for(const[t,s]of this._urlsToCacheKeys){const a=this._cacheKeysToIntegrities.get(s),n=this._urlsToCacheModes.get(t),i=new Request(t,{integrity:a,cache:n,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:i,event:e}))}const{updatedURLs:s,notUpdatedURLs:a}=t;return{updatedURLs:s,notUpdatedURLs:a}}))}activate(e){return c(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),a=[];for(const n of t)s.has(n.url)||(await e.delete(n),a.push(n.url));return{deletedURLs:a}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(e){const s=this.getCacheKeyForURL(e);if(!s)throw new t("non-precached-url",{url:e});return t=>(t.request=new Request(e),t.params=Object.assign({cacheKey:s},t.params),this.strategy.handle(t))}}s(481);(async()=>{const e=function(){const e=JSON.parse(new URLSearchParams(self.location.search).get("params"));return e.debug&&console.log("[Docusaurus-PWA][SW]: Service Worker params:",e),e}(),t=[{"revision":"c735b8e359cf8f68a3f9dce99d8bfad2","url":"404.html"},{"revision":"ed2a7ab41bc842160cff9f848e7400fc","url":"assets/css/styles.ba636868.css"},{"revision":"d64df0187403cf00e1f677cb8a0644de","url":"assets/js/01a85c17.28c5664e.js"},{"revision":"108c4d235eb44824385b8e607a342078","url":"assets/js/073e0fda.14318397.js"},{"revision":"dc21bf43d2ea92a1a102b47369cb43fc","url":"assets/js/088b3228.42789752.js"},{"revision":"25be89033817a72096047673536cb677","url":"assets/js/15d070c3.652cebb2.js"},{"revision":"b5a3adcd9e3a97c337fe827fe114a4b9","url":"assets/js/1c986446.4a1fab08.js"},{"revision":"7c3042890997b225bf112bf2447e907c","url":"assets/js/1df93b7f.2acbe542.js"},{"revision":"e1fb5f1fb1787c8e46a84e28f684534d","url":"assets/js/1dfc94a1.2f3dd4c5.js"},{"revision":"60076917049c09ea082e6feefa69dc03","url":"assets/js/1ec2e45d.f759da03.js"},{"revision":"bae0077c0d74f720f4364e717e3e30e2","url":"assets/js/224db2be.0dc15039.js"},{"revision":"9ac5a05dfbd803b683fc6db7c6cba369","url":"assets/js/2ce7cb45.514508a0.js"},{"revision":"1d459b829af7a7e39b4616d8d0f87053","url":"assets/js/2df2f8dc.2fe7d94f.js"},{"revision":"038d5ab95c6a198cde3fdbdb6e125694","url":"assets/js/3296.0fc59f93.js"},{"revision":"80979a0ef9bd62cbd66eb84dc5b754bc","url":"assets/js/3580.cc0a8e20.js"},{"revision":"8a3ed74106f91d3a7633736c2f65161a","url":"assets/js/3c816a67.b47c9954.js"},{"revision":"3afa8881758dc49e4fed96d35080090d","url":"assets/js/451dbd0f.84591702.js"},{"revision":"601bad5b628275b50a35ba9d02df1ec9","url":"assets/js/4792d0f9.6f930702.js"},{"revision":"43c4e28570edf4cb87a9017333a6bf69","url":"assets/js/4c22b11d.5bdd27d5.js"},{"revision":"1959fcff193c2ef777b287a5f22e3a9e","url":"assets/js/51da1ca8.183a7b6c.js"},{"revision":"9bf11756fa39bd05e947dc009a915550","url":"assets/js/55eb21a6.10aae368.js"},{"revision":"e387af4f671338c681f4c113cbbff10b","url":"assets/js/607b2344.ace899ce.js"},{"revision":"9b56f62ef0c7f679c3f21320283c34ba","url":"assets/js/627e96c6.5fff7adc.js"},{"revision":"64db3d7d8db5c7b382012dcab30140f7","url":"assets/js/658.1fb10d08.js"},{"revision":"274e1b237cf506c5d9b9bdf9b75fbfe7","url":"assets/js/681a7efa.39e7a0e3.js"},{"revision":"584fe5a3706d52df6f892b201662604e","url":"assets/js/6875c492.a40c6ed2.js"},{"revision":"95d450faae923b784ba61caeeeeb3d24","url":"assets/js/6b9f5967.e8e0e7db.js"},{"revision":"7b427dc9e75bb952d8e42c71afa5466b","url":"assets/js/7a37a2ff.aea235bd.js"},{"revision":"3559687f60831b105bf6f26fc3b006ce","url":"assets/js/7b6396d9.10549bd8.js"},{"revision":"515ecd3acf2bb1875970fc96aec0956e","url":"assets/js/814f3328.cc96d32a.js"},{"revision":"124f4868734d750b30937e463aa5db02","url":"assets/js/8488.d5466e66.js"},{"revision":"ff00b62b7951abea16a1977c2b0df888","url":"assets/js/8758b7c0.59af5db2.js"},{"revision":"f09ec01fcb259956bb745760ead29ea2","url":"assets/js/8be49599.bd8e9db9.js"},{"revision":"8f2360282330709ec502fc60ed5f8e55","url":"assets/js/92a46314.b9cde859.js"},{"revision":"6b75b37055b2ceac07289d2cde8513a5","url":"assets/js/931707c5.d057559b.js"},{"revision":"fb5c595a2ef2f2d6c2d010b22729d48d","url":"assets/js/9641.2127f8e7.js"},{"revision":"2a31815cb18474a7b0b7e499c1c7d531","url":"assets/js/9a119d2a.266499f5.js"},{"revision":"f016c1a32fcd27983cd129105a47a570","url":"assets/js/9d2c182a.97c979dd.js"},{"revision":"7a44d847d58cf07f061e39d044a3d57f","url":"assets/js/9e4087bc.e358eaf0.js"},{"revision":"fb1b9b5b518aebb42661d793be710a52","url":"assets/js/9f46bfbf.dcf35658.js"},{"revision":"21f76bc7989a02f4986dedaea6f85bcb","url":"assets/js/a2280744.deecc484.js"},{"revision":"c16b843669435982fdf4628c672dae8f","url":"assets/js/a24beb83.1a2270f1.js"},{"revision":"f6919041aadd6b144b3fcc3cb19704bd","url":"assets/js/a6aa9e1f.f8063885.js"},{"revision":"e8c12cec3b14e1eb891c7a9af0650539","url":"assets/js/a7023ddc.3e2faf44.js"},{"revision":"295aaa16107e29df5b9ed57e65efada9","url":"assets/js/a8f03678.47c1f5b6.js"},{"revision":"c87fc70f41a0b817fe4094a8c406e822","url":"assets/js/ac918956.48aba64f.js"},{"revision":"4661cfbb1ba9f321707da591929e731a","url":"assets/js/b1b844e7.628c4eee.js"},{"revision":"64b6641169d41df046275e5f2b7aa6dd","url":"assets/js/b2b675dd.c8f69806.js"},{"revision":"255579484e6f777e829166e3dac62450","url":"assets/js/b2f554cd.7b449d1a.js"},{"revision":"e916a5d5cf918a4f62dfecf8dc6b23b9","url":"assets/js/b745e581.48cfb4f2.js"},{"revision":"68e09ec2d72731a7d5f353eb9520028a","url":"assets/js/b9173af5.9580b9d7.js"},{"revision":"75298221fee30481eef903c92a7bf052","url":"assets/js/bb899d9f.e5d923c7.js"},{"revision":"d30e0d72127ee41e1b1d92e6dec5f1e1","url":"assets/js/bcbbf42e.ab3db42d.js"},{"revision":"dca5de5acee8504fa1a3012e321d6d5a","url":"assets/js/bd4c38bc.6db8a06c.js"},{"revision":"821d0bea53fc22012567bdc3d7f2fe33","url":"assets/js/c2b2df4f.1f0bc6a9.js"},{"revision":"a8fa21ade4d69799ec53b2fd24013017","url":"assets/js/ccc49370.3e30928d.js"},{"revision":"4dd3ba3a9b7e0c0af8fe1fe58885f3f2","url":"assets/js/cce51cf2.7fced476.js"},{"revision":"1ef2a9aa0590c71534c9fb15a8ed062d","url":"assets/js/df89e4a8.e14c542b.js"},{"revision":"2cd54c849975cc0d53f99fd017cbadf5","url":"assets/js/df98ca8b.3df5dac0.js"},{"revision":"7cc22bc5073bc7ce68d3298e2067d559","url":"assets/js/e450744e.d427f61c.js"},{"revision":"47046a0e9ecbb6d4e81d751d8c795000","url":"assets/js/f6ba3702.76b2c6d6.js"},{"revision":"fa8d04de979138f5a986607d72c3bef2","url":"assets/js/fc3deafd.7a5b4193.js"},{"revision":"84000021f3dd2faf65141ed712bdbd5d","url":"assets/js/ff608589.abbb9378.js"},{"revision":"da6c9dae8f3d7da9ba50a4c3f07bd616","url":"assets/js/main.1d8a622c.js"},{"revision":"95aae24a9799950c23efca03ae6f0ae7","url":"assets/js/runtime~main.71b1a5fc.js"},{"revision":"0ec8c630d38804c3af446714d40b7ded","url":"blog/2022/06/07/friendship-ended/index.html"},{"revision":"318359b498acc527b2fb415df84e4cb2","url":"blog/archive/index.html"},{"revision":"5b985f82d1c865dfe877b45d15e003b4","url":"blog/bye-bye-netlify/index.html"},{"revision":"a8152ad0dee632371fccca040536f08c","url":"blog/dev-log/boboman/day1/index.html"},{"revision":"9bdb8557dcd2260b29ba07150ce2e11c","url":"blog/dev-log/boboman/day2/index.html"},{"revision":"68878ec2551856d12ef44047d128ce59","url":"blog/dev-log/boboman/day3/index.html"},{"revision":"73977945178e9dcce015fcf898fe2826","url":"blog/index.html"},{"revision":"fb240922cd917346fb6642dc2e7a6455","url":"blog/tags/backend/index.html"},{"revision":"9ad8e083d16c9f5f2591e1867b721a25","url":"blog/tags/dev-log/index.html"},{"revision":"eed6a633a810c7a2288ad438d3c75f51","url":"blog/tags/dev/index.html"},{"revision":"7aa692d3e1de3341a38950f407e51969","url":"blog/tags/first/index.html"},{"revision":"de2a2b174be2e22f31e9ee0299fd268d","url":"blog/tags/gh-pages/index.html"},{"revision":"cb2ced2d3b9a2f15cf6c1d9462eaa01b","url":"blog/tags/go/index.html"},{"revision":"8fa3528ca315cafb88ee5f093e47e9fc","url":"blog/tags/hosting/index.html"},{"revision":"4e29c86020bc75baa71d4460764673de","url":"blog/tags/index.html"},{"revision":"c9340f3e36c0378a7d98efbad91a0ed0","url":"blog/tags/love/index.html"},{"revision":"84e46d9f658d70ba9da6d2fde669f7f4","url":"blog/tags/lua/index.html"},{"revision":"860e40e9f29f490ea5fd2f3461961bef","url":"blog/tags/meme/index.html"},{"revision":"55687c26074f871d62396c4a9aa72861","url":"blog/tags/netlify/index.html"},{"revision":"f6b490e501553ee57cf71304535803e9","url":"blog/tags/til/index.html"},{"revision":"6e7d482c6859170a48a5943e5fe09d96","url":"blog/tags/typescript/index.html"},{"revision":"0aa5f66738314311ee3ce292e594d766","url":"blog/tags/welcome/index.html"},{"revision":"f5bf0d543e177378634c897fc3b9303c","url":"blog/til/my-actual-height/index.html"},{"revision":"d81e333d47709bc9e39220ab81905c84","url":"blog/welcome/index.html"},{"revision":"bc208bc0cbe4435171b39923af440a09","url":"index.html"},{"revision":"d5443a06fab2877663bfef43d8f553bb","url":"manifest.json"},{"revision":"152fd7306abb08630f6190844df3abed","url":"projects/index.html"},{"revision":"40a35d64bc9f58fbdcf2d81f1e265152","url":"work/index.html"},{"revision":"f3c141d93c2fa0ff22109674933bf1d4","url":"android-chrome-192x192.png"},{"revision":"5297b9312c0ac6c8fdd306dc865cfb8a","url":"android-chrome-512x512.png"},{"revision":"a6a595d086a2cac9c0fb735d7cc4d08b","url":"apple-touch-icon.png"},{"revision":"7f740557aa8f363f922f8c88029c364f","url":"assets/images/boboman-81f5324a09b21c5973c71e5ad3c65132.gif"},{"revision":"108dd55001116a31b54284171071131b","url":"favicon-16x16.png"},{"revision":"0f934f6eed47b8c1dceacd4838b70061","url":"favicon-32x32.png"},{"revision":"fbff65a23b8a920105ed91f976f47d44","url":"favicon.ico"},{"revision":"c3aa24619e1189e1598915cff7f0c16f","url":"img/devpost.svg"},{"revision":"7fa1a026116afe175cae818030d4ffc4","url":"img/docusaurus.png"},{"revision":"3347c54aa0cd5907b9dd834d0c7495ff","url":"img/email.svg"},{"revision":"63e30ac6e5c59cb3e2d1076ca68e3f5d","url":"img/gitea.svg"},{"revision":"07883e93734b98cae0f7b9c55d287250","url":"img/github.svg"},{"revision":"0ad2d4f0834413c8d66ca3ecee620351","url":"img/isaic-logo.png"},{"revision":"439e2be9600bfdccbbb0c7b2b2414f93","url":"img/isaic.svg"},{"revision":"4b17c9586313717e568e841e662d381e","url":"img/linkedin.svg"},{"revision":"e1a2f971a6ea83cd2fbf87de6399763b","url":"img/npm-logo.svg"},{"revision":"cbdc79da1ad69751cfdebc27ea90d52e","url":"img/thyck/h2h.svg"},{"revision":"055c03e52da9e57196d2a731ff40393a","url":"img/thyck/logo.png"},{"revision":"389c76edccbe2574cc0d478d11954636","url":"img/thyck/logo.svg"},{"revision":"8ffc632675fed0ad918b736b27400c36","url":"img/thyck/wapp.svg"},{"revision":"a6b83d7b4c3cf36cb21eb7a9721716dd","url":"img/undraw_docusaurus_mountain.svg"},{"revision":"b64ae8e3c10e5ff2ec85a653cfe6edf8","url":"img/undraw_docusaurus_react.svg"},{"revision":"8fa6e79a15c385d7b2dc4bb761a2e9e3","url":"img/undraw_docusaurus_tree.svg"}],s=new v({fallbackToNetwork:!0});e.offlineMode&&(s.addToCacheList(t),e.debug&&console.log("[Docusaurus-PWA][SW]: addToCacheList",{precacheManifest:t})),await async function(e){}(),self.addEventListener("install",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: install event",{event:t}),t.waitUntil(s.install(t))})),self.addEventListener("activate",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: activate event",{event:t}),t.waitUntil(s.activate(t))})),self.addEventListener("fetch",(async t=>{if(e.offlineMode){const a=t.request.url,n=function(e){const t=new URL(e,self.location.href);return t.origin!==self.location.origin?[]:(t.search="",t.hash="",[t.href,`${t.href}${t.pathname.endsWith("/")?"":"/"}index.html`])}(a);for(const i of n){const r=s.getCacheKeyForURL(i);if(r){const s=caches.match(r);e.debug&&console.log("[Docusaurus-PWA][SW]: serving cached asset",{requestURL:a,possibleURL:i,possibleURLs:n,cacheKey:r,cachedResponse:s}),t.respondWith(s);break}}}})),self.addEventListener("message",(async t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: message event",{event:t});const s=t.data?.type;"SKIP_WAITING"===s&&self.skipWaiting()}))})()})()})();